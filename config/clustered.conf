## This example shows the clustered features of this service, which uses two
## or more nodes and broadcasts client messages between the services so that
## clients should not need to worry about which server they are connected to
## in order for the intended recipient to receive messages.
##
## Additionally, it uses a networked Elasticsearch cluster with two or more
## nodes by default.

include "application"

javabin-rest-on-akka {
    elasticsearch.settings {
        discovery.zen.minimum_master_nodes = ${akka.cluster.min-nr-of-members}
        discovery.zen.ping.multicast.enabled = true
    }
}

akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://javabin-rest-on-akka@127.0.0.1:2551",
      "akka.tcp://javabin-rest-on-akka@127.0.0.1:2552"
    ]

    auto-down-unreachable-after = 30s

    min-nr-of-members = 2
  }
}